#include <iostream>

using namespace std;

void PrintArray(const int* array, int size);
void InitializeArray(int* array, int size);

int* Map(int array[], int size, int(*f)(int num));
int* Filter(int array[], int &size, bool(*f)(int num));
int Reduce(const int array[], int size, int(*f)(int num1, int num2));

//funcs for map
int Increment(int num);
int Decrement(int num);
//funcs for filter
bool IsEven(int num);
bool IsOdd(int num);
//funcs for reduce
int Sum(int num1, int num2);
int Subs(int num1, int num2);


int main()
{
    setlocale(0, "rus");
    int size = 20;
    int array[20];
    InitializeArray(array, size);
    cout << "Initial array: ";
    PrintArray(array, size);

	//map

    cout << "Incremented array: ";
    PrintArray(Map(array, size, Increment), size);

    cout << "Decremented array: ";
    PrintArray(Map(array, size, Decrement), size);

	//filter

    int new_size = size;
    int*array1 = Filter(array, new_size, IsEven);
    cout << "Even numbers of the array: " << endl;
    PrintArray(array1, new_size);


    new_size = size;

    array1 = Filter(array, new_size, IsOdd);
    cout << "Odd numbers of the array: " << endl;
    PrintArray(array1, new_size);


	//reduce

    cout << "Sum of elements of array: ";
    cout << Reduce(array, size, Sum) << endl;


    cout << "Differenece between elements of array: ";
    cout << Reduce(array, size, Subs) << endl;


    return 0;
}

void PrintArray(const int* array, int size)
{
    for (int i = 0; i < size; i++)
        {
	    cout << array[i] << " ";
        }
    cout << endl;
}
void InitializeArray(int* array, int size)
{
    for (int i = 0; i < size; i++)
        {
            array[i] = i;
        }
}


int* Map(int array[], int size, int(*f)(int num))
{
    for (int i = 0; i < size; i++)
        {
            array[i] = f(array[i]);
        }
    return array;
}
int* Filter(int array[], int &size, bool(*f)(int num))
{
    int * temp_array = new int[size];
    int j = 0;
    for (int i = 0; i < size; i++)
        {
            if (f(array[i]))
            {
                temp_array[j] = array[i];
                j++;
            }
        }
    size = j;
    return temp_array;
}
int Reduce(const int array[], int size, int(*f)(int num1, int num2))
{
    int value = 0;
    for (int shift = 1; shift < size; shift++)
        {
            value = f(value, array[shift]);
        }
    return value;
}


//funcs for map
int Increment(int num)
{
    return ++num;
}
int Decrement(int num)
{
    return --num;
}
//funcs for filter
bool IsEven(int num)
{
    return num % 2 == 0 ? true : false;
}
bool IsOdd(int num)
{
    return !IsEven(num);
}
//funcs for reduce
int Sum(int num1, int num2)
{
    return num1 + num2;
}
int Subs(int num1, int num2)
{
    return num1 - num2;
}